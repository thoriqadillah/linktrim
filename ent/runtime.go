// Code generated by ent, DO NOT EDIT.

package ent

import (
	"time"

	"github.com/google/uuid"
	"github.com/thoriqadillah/linktrim/ent/link"
	"github.com/thoriqadillah/linktrim/ent/schema"
	"github.com/thoriqadillah/linktrim/ent/user"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	linkFields := schema.Link{}.Fields()
	_ = linkFields
	// linkDescCreatedAt is the schema descriptor for created_at field.
	linkDescCreatedAt := linkFields[4].Descriptor()
	// link.DefaultCreatedAt holds the default value on creation for the created_at field.
	link.DefaultCreatedAt = linkDescCreatedAt.Default.(func() time.Time)
	// linkDescID is the schema descriptor for id field.
	linkDescID := linkFields[0].Descriptor()
	// link.DefaultID holds the default value on creation for the id field.
	link.DefaultID = linkDescID.Default.(func() uuid.UUID)
	userFields := schema.User{}.Fields()
	_ = userFields
	// userDescCreatedAt is the schema descriptor for created_at field.
	userDescCreatedAt := userFields[5].Descriptor()
	// user.DefaultCreatedAt holds the default value on creation for the created_at field.
	user.DefaultCreatedAt = userDescCreatedAt.Default.(func() time.Time)
	// userDescID is the schema descriptor for id field.
	userDescID := userFields[0].Descriptor()
	// user.DefaultID holds the default value on creation for the id field.
	user.DefaultID = userDescID.Default.(func() uuid.UUID)
}
